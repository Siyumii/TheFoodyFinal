
@model TheFoody.Models.RestaurantDeatilModel

@{
    ViewBag.Title = "CreateRestaurant";
    var obj = ViewBag.Categories;
}

<div class="container">
    <div class="col-md-12">

        @section RestaurantImageJavascript {
            <script src="~/Scripts/jquery-1.7.1.min.js"></script>
            <script type="text/javascript">

            function show(input) {
                if (input.files && input.files[0]) {
                    var filerdr = new FileReader();
                    filerdr.onload = function (e) {
                        $('#user_img').attr('src', e.target.result);
                    }
                    filerdr.readAsDataURL(input.files[0]);
                }
            }
            
            </script>
        }
        
        @using (Html.BeginForm("CreateRestaurant", "Restaurant", FormMethod.Post, new
        {
            enctype = "multipart/form-data"
        }))
        {
            @Html.AntiForgeryToken()
    <div class="admin-section-title">
        <h2>Add Restaurant Deatils</h2>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    </div>
    <div class="GridLex-col-9_sm-8_xs-12">

        <div class="admin-content-wrapper" id="restaurantProfile">

            <form class="post-form-wrapper">

                <div class="row gap-20">
                    <div class="col-sm-6 col-md-4">
                        <div class="form-group bootstrap-fileinput-style-01">

                            @Html.LabelFor(model => model.Logo)

                            @Html.EditorFor(model => model.Logo, new { htmlAttributes = new { @class = "form-control", @type = "file", @name = "logo", @id = "logo", @onchange = "show(this)" } })
                            @Html.ValidationMessageFor(model => model.Logo, "", new { @class = "text-danger" })


                            <div class="col-md-6">
                                <img id="user_img"
                                     height="100"
                                     width="90"
                                     style="border:solid" />
                            </div>

                        </div>
</div>
                    </div>

                    <div class="clear"></div>

                <div class="col-sm-6 col-md-4">

                    <div class="form-group">
                        @Html.LabelFor(model => model.RestaurantName)
                        @Html.EditorFor(model => model.RestaurantName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RestaurantName, "", new { @class = "text-danger" })
                    </div>

                </div>
                    <div class="clear"></div>

                    <div class="col-sm-12 col-md-8">

                        <div class="form-group">
                            @Html.LabelFor(model => model.Categories)
                            @foreach (TheFoody.Models.CategoryViewModel category in ViewBag.Categories)
                            {
                                <div class="checkbox-block job-type-checkbox ">
                                    @if (!@category.isChecked)
                                    {
                                        <input style="float:left" id="@category.id" name="job_type_checkbox" type="checkbox" class="checkbox" value="@category.category" />
                                        <label for="@category.id">@category.category</label>
                                    }
                                    else
                                    {
                                        <input style="float:left" id="@category.id" name="job_type_checkbox" type="checkbox" class="checkbox" value="@category.category" checked="checked" />
                                        <label for="@category.id">@category.category</label>
                                    }
                                </div>
                            }
                            @Html.ValidationSummary(true)
                            @Html.ValidationMessageFor(model => model.Categories, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <div class="clear"></div>

                    <div class="col-sm-6 col-md-4">

                        <div class="form-group">
                            @Html.LabelFor(model => model.Website)
                            @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="col-sm-6 col-md-4">

                        <div class="form-group">
                            @Html.LabelFor(model => model.Phone)
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @pattern = "[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]", @type = "tel" } })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="clear"></div>

                    <div class="col-sm-6 col-md-4">

                        <div class="form-group">
                            @Html.LabelFor(model => model.Address)
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <div class="col-sm-6 col-md-4">

                        <div class="form-group">
                            @Html.LabelFor(model => model.City)
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <div class="clear"></div>

                    <div class="col-sm-6 col-md-4">

                        <div class="form-group">
                            @Html.LabelFor(model => model.District)
                            @Html.EditorFor(model => model.District, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <div class="col-sm-6 col-md-4">

                        <div class="form-group">
                            @Html.LabelFor(model => model.PostCode)
                            @Html.EditorFor(model => model.PostCode, new { htmlAttributes = new { @class = "form-control", @min = "00100", @max = "90000", @type = "number" } })
                            @Html.ValidationMessageFor(model => model.PostCode, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <div class="clear"></div>

                    <div class="col-sm-6 col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.OpeningTime)
                            @Html.EditorFor(model => model.OpeningTime, new { htmlAttributes = new { @class = "form-control", @type = "time" } })
                            @Html.ValidationMessageFor(model => model.OpeningTime, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-6 col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ClosingTime)
                            @Html.EditorFor(model => model.ClosingTime, new { htmlAttributes = new { @class = "form-control", @type = "time" } })
                            @Html.ValidationMessageFor(model => model.ClosingTime, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="clear"></div>
                    <div class="col-sm-6 col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DeliveryStartingTime)
                            @Html.EditorFor(model => model.DeliveryStartingTime, new { htmlAttributes = new { @class = "form-control", @type = "time" } })
                            @Html.ValidationMessageFor(model => model.DeliveryStartingTime, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-6 col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DeliveryEndingTime)
                            @Html.EditorFor(model => model.DeliveryEndingTime, new { htmlAttributes = new { @class = "form-control", @type = "time" } })
                            @Html.ValidationMessageFor(model => model.DeliveryEndingTime, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="clear"></div>
                    <div class="col-sm-6 col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.TimetakentoDeliver)
                            @Html.EditorFor(model => model.TimetakentoDeliver, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                            @Html.ValidationMessageFor(model => model.TimetakentoDeliver, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <div class="col-sm-6 col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.MinDelivery)
                            @Html.EditorFor(model => model.MinDelivery, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "0", @step = "0.01" } })
                            @Html.ValidationMessageFor(model => model.MinDelivery, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <div class="clear"></div>

                    <div class="col-sm-12 col-md-12">

                        <div class="form-group bootstrap3-wysihtml5-wrapper">
                            @Html.LabelFor(model => model.CompanyBackground)
                            @Html.TextAreaFor(model => model.CompanyBackground, 10, 100, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter text ..." } })
                            @Html.ValidationMessageFor(model => model.CompanyBackground, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <div class="clear"></div>

                    <div class="form-group col-sm-12 mt-10">
                        <input type="submit" value="Save" class="btn btn-primary" />
                        <input type="reset" value="Cancel" class="btn btn-warning" />
                    </div>

           

            </form>

        </div>

    </div>
        }
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
