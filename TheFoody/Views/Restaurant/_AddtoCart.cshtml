@*@model IEnumerable<TheFoody.Models.CartItem>*@
@using TheFoody.Controllers
<!-- Heading Starts -->
<h5 class="text-center"><i class="fa fa-shopping-basket"></i> Your Orders</h5>
<!-- Heading Ends -->
<!-- Order Content Starts -->
<div class="side-block-order-content">
    <!-- Order Item List Starts -->
    <ul class="list-unstyled order-item-list">
        @{double total = 0;}
        @if (Session["Cart"] == null)
        {
            <li class="clearfix">
                <span class="pull-left">No Items in the basket</span>
                <span class="pull-right text-spl-color">-</span>
            </li>
            }
            else
            {
                foreach (Item item in (List<Item>)Session["Cart"])
                {

                    
                    double itemprice = item.Cartitem.MenuPrice * item.Cartitem.Quantity;
                    total = total + itemprice;
                    <li class="clearfix">
                        
                        @*@helper AjaxLink(string action, string controller, string icon_name)
                        {
                        <a href="@Url.Action(action, new { controller = controller })" data-ajax-update="#shoppingcart" data-ajax-mode="replace" data-ajax="true"><div class="icon @icon_name"></div></a>
                        }*@
                        
                        @Ajax.ActionLink("X", "RemovefromCart", new { Item = item}, new AjaxOptions
                   {
                       UpdateTargetId = "shoppingcart",
                       InsertionMode = InsertionMode.Replace,
                       HttpMethod = "GET",

                   },new { style= "background-image:url(/images/remove.png)" })
                        <span>@Html.DisplayFor(modelItem => item.Cartitem.Quantity)</span>
                        <span>x</span>
                        <span>@Html.DisplayFor(modelItem => item.Cartitem.MenuName)</span>
                        <span class="pull-right text-spl-color">Rs.@itemprice</span>
                    </li>
            }
        }
    </ul>
    <!-- Order Item List Ends -->
    <div class="row">
        <div class="col-md-6 col-xs-6 col-sm-6">
            <input class="custom-radio-big" type="radio" name="delivery-priority" id="collection">
            <label for="collection">Collection</label>
        </div>
        <div class="col-md-6 col-xs-6 col-sm-6">
            <input class="custom-radio-big" type="radio" name="delivery-priority" id="delivery" checked>
            <label for="delivery">Delivery</label>
        </div>
    </div>
    <!-- Order Item Total Starts -->
    <dl class="dl-horizontal order-item-total">
        <dt class="text-light">Orders Amount :</dt>
        <dd class="text-spl-color text-right">Rs.@total</dd>
        <dt class="text-light" id="delchargelbl">Delivery Charges :</dt>
        <dd class="text-spl-color text-right" id="delcharge">Rs.80.00</dd>
        <hr>
        <dt class="text-bold">Total  Amount :</dt>
        <dd class="text-bold text-spl-color text-right" id="totalam">Rs.@total</dd>
    </dl>
    <!-- Order Item Total Ends -->
    @if (total >= Convert.ToInt32(Session["MinDelivery"]))
    {
        <div class="cfo-checkoutarea">
            @Html.ActionLink("Proceed to checkout","Checkout","Checkout",new { @class="btn btn-primary btn-block custom-checkout"})
            @*<button type="submit" id="a" name="a" class="btn btn-primary btn-block custom-checkout">Proceed to Checkout</button>*@
        </div>
    }
    else
    {
        double dif = Convert.ToInt32(Session["MinDelivery"])-total;
        <div class="cfo-checkoutarea">
            <label>Spend Rs.@dif more for delivery</label>
            @*@Html.ActionLink("Proceed to checkout", "Checkout", "Checkout", new { @class = "btn btn-primary btn-block custom-checkout",htmlattribute:disabled })*@
            <button type="submit" id="a" name="a" class="btn btn-primary btn-block custom-checkout" disabled>Proceed to Checkout</button>
        </div>
    }

</div>
<!-- Order Content Ends -->
<script type="text/javascript">
//$(function () {
//    $(':radio[name="delivery-priority"]').change(function () {
//        $.ajax({
//            url: 'Restaurant/changeoption',
//            type: 'POST',
//            data: { sex: $('radio[name="sex"]').val() },
//            success: function (xhr_data) {
//                alert(xhr_data.someValue);
//            }
//        });
//    });
//});




//var update_pizza = function () {
//    if ($("#pizza").is(":checked")) {
//        $('#pizza_kind').prop('disabled', false);
//    }
//    else {
//        $('#pizza_kind').prop('disabled', 'disabled');
//    }
//};
</script>
@*@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.MenuID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MenuName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MenuPrice)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TotalPrice)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
        </td>
    </tr>
}*@
